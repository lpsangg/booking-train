// Demo s·ª≠ d·ª•ng d·ªØ li·ªáu gh·∫ø v√† gi√° gh·∫ø t·ª´ mock data
import { 
  getSeatPrice, 
  getSeatBehavior, 
  generateDefaultSeatBehavior,
  SEAT_PRICING_DATA,
  SEAT_BEHAVIOR_DATA 
} from './seatPricing';

// Test function ƒë·ªÉ demo c√°c t√≠nh nƒÉng
export const demoSeatPricingSystem = () => {
  console.log('üé´ DEMO: H·ªá th·ªëng gi√° gh·∫ø v√† h√†nh vi kh√°ch h√†ng');
  console.log('==================================================');
  
  // 1. Test l·∫•y gi√° gh·∫ø
  const price1 = getSeatPrice('SE9', 'H√† N·ªôi', 'Nha Trang', 'hard_seat', 1, 5);
  console.log(`üí∞ Gi√° gh·∫ø SE9 (HN‚ÜíNT, hard_seat, car 1, seat 5): ${price1.toLocaleString()} VND`);
  
  const price2 = getSeatPrice('SE9', 'H√† N·ªôi', 'Nha Trang', '4_berth_cabin', 4, 10);
  console.log(`üí∞ Gi√° gh·∫ø SE9 (HN‚ÜíNT, 4_berth_cabin, car 4, seat 10): ${price2.toLocaleString()} VND`);
  
  const price3 = getSeatPrice('SE1', 'H√† N·ªôi', 'S√†i G√≤n', '6_berth_cabin', 3, 15);
  console.log(`üí∞ Gi√° gh·∫ø SE1 (HN‚ÜíSG, 6_berth_cabin, car 3, seat 15): ${price3.toLocaleString()} VND`);
  
  // 2. Test l·∫•y h√†nh vi gh·∫ø
  const behavior1 = getSeatBehavior('SE9', 'hard_seat', 'A1');
  console.log('üë§ H√†nh vi gh·∫ø SE9-hard_seat-A1:', behavior1);
  
  const behavior2 = getSeatBehavior('SE9', '4_berth_cabin', '1-1');
  console.log('üë§ H√†nh vi gh·∫ø SE9-4_berth_cabin-1-1:', behavior2);
  
  // 3. Test t·∫°o h√†nh vi m·∫∑c ƒë·ªãnh
  const defaultBehavior = generateDefaultSeatBehavior('SE5', 'soft_seat', 'B3');
  console.log('üîß H√†nh vi m·∫∑c ƒë·ªãnh cho SE5-soft_seat-B3:', defaultBehavior);
  
  // 4. Th·ªëng k√™ d·ªØ li·ªáu
  console.log(`üìä T·ªïng s·ªë t√†u c√≥ d·ªØ li·ªáu gi√°: ${SEAT_PRICING_DATA.length}`);
  console.log(`üìä T·ªïng s·ªë gh·∫ø c√≥ d·ªØ li·ªáu h√†nh vi: ${SEAT_BEHAVIOR_DATA.length}`);
  
  // 5. Demo gi√° theo t·ª´ng tuy·∫øn
  console.log('\nüöÇ So s√°nh gi√° theo tuy·∫øn:');
  const routes = [
    { trainId: 'SE1', origin: 'H√† N·ªôi', destination: 'S√†i G√≤n' },
    { trainId: 'SE5', origin: 'H√† N·ªôi', destination: 'ƒê√† N·∫µng' },
    { trainId: 'SE9', origin: 'H√† N·ªôi', destination: 'Nha Trang' },
    { trainId: 'SE22', origin: 'Vinh', destination: 'S√†i G√≤n' }
  ];
  
  routes.forEach(route => {
    const hardSeatPrice = getSeatPrice(route.trainId, route.origin, route.destination, 'hard_seat', 1, 1);
    const softSleeperPrice = getSeatPrice(route.trainId, route.origin, route.destination, '4_berth_cabin', 4, 1);
    
    console.log(`${route.trainId} (${route.origin} ‚Üí ${route.destination}):`);
    console.log(`  ü™ë Hard seat: ${hardSeatPrice.toLocaleString()} VND`);
    console.log(`  üõèÔ∏è Soft sleeper: ${softSleeperPrice.toLocaleString()} VND`);
  });
  
  return {
    totalTrains: SEAT_PRICING_DATA.length,
    totalBehaviors: SEAT_BEHAVIOR_DATA.length,
    samplePrices: { price1, price2, price3 },
    sampleBehaviors: { behavior1, behavior2, defaultBehavior }
  };
};

// Export cho vi·ªác testing
export const testSeatPricing = demoSeatPricingSystem;
